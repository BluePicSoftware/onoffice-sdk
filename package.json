{
  "name": "onoffice",
  "version": "0.0.8",
  "description": "OnOffice typescript api client and sdk",
  "type": "module",
  "engines": {
    "node": ">=15.0.0"
  },
  "files": [
    "lib",
    "package.json",
    "package-lock.json",
    "README.md"
  ],
  "main": "./lib/cjs/index.js",
  "module": "./lib/esm/index.js",
  "exports": {
    ".": {
      "types": "./lib/esm/types/index.d.ts",
      "import": "./lib/esm/index.js",
      "require": "./lib/cjs/index.js"
    }
  },
  "types": "./lib/esm/types/index.d.ts",
  "scripts": {
    "test": "jest",
    "format": "prettier --write \"{src,test}/**/*.ts\"",
    "lint": "eslint . --ext .ts",
    "build:cjs": "tsc -p tsconfig.cjs.json && echo \"{ \\\"type\\\": \\\"commonjs\\\" }\" > ./lib/cjs/package.json",
    "build:esm": "tsc -p tsconfig.json && node workflows/rename_js_ext.js --target lib/esm --regex-import-statement \"^\\s*(import|export)\\s{1,}(.*)\\s{1,}from\\s{1,}(\\\"|')(\\.{1,2}\\/.*)(\\\"|');?\\s*$\" --regex-filename \"\\.js\"",
    "build:esm:windoof": "tsc -p tsconfig.json && wsl node workflows/rename_js_ext.js --target lib/esm",
    "build": "rm -rf lib && npm run build:esm && npm run build:cjs",
    "build:windoof": "rd /s /q lib && npm run build:esm:windoof && npm run build:cjs",
    "serve": "npm link && npm-watch build"
  },
  "keywords": [
    "onoffice",
    "sdk",
    "api"
  ],
  "author": "Maurice Conrad",
  "license": "UNLICENSED",
  "devDependencies": {
    "@babel/types": "^7.17.0",
    "@types/crypto-js": "^4.1.1",
    "@types/jest": "^27.4.1",
    "@types/node": "^17.0.26",
    "@typescript-eslint/eslint-plugin": "^5.20.0",
    "@typescript-eslint/parser": "^5.20.0",
    "command-line-args": "^5.2.1",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "^27.5.1",
    "prettier": "^2.6.2",
    "ts-jest": "^27.1.4",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.3"
  },
  "dependencies": {
    "axios": "^0.26.1",
    "base64-arraybuffer": "^1.0.2",
    "crypto-js": "^4.1.1"
  },
  "watch": {
    "build": {
      "patterns": [
        "src",
        "prepare"
      ],
      "extensions": "ts,js,js,vue,css",
      "legacyWatch": true
    }
  }
}
